# Use Wolfi as base image with Go support for builder stage
FROM cgr.dev/chainguard/go:latest as builder

# Set working directory
WORKDIR /build

# First, copy the sourcecode-parser module
COPY ./sourcecode-parser /build/sourcecode-parser

# Copy the playground module
COPY ./playground /build/playground

# Set working directory to playground
WORKDIR /build/playground

# Build the application with security flags
ENV CGO_ENABLED=1
RUN go build -o playground

# Use distroless base image for minimal attack surface
FROM cgr.dev/chainguard/wolfi-base:latest

# Create non-root user
USER nonroot:nonroot

# Set working directory
WORKDIR /app

# Copy the binary from builder
COPY --from=builder --chown=nonroot:nonroot /build/playground/playground /app/

# Copy static files
COPY --from=builder --chown=nonroot:nonroot /build/playground/public/static /app/public/static

# Create and set permissions for temporary directory
RUN mkdir -p /tmp/code-analysis && \
    chmod 0750 /tmp/code-analysis && \
    chown nonroot:nonroot /tmp/code-analysis

# Expose port 8080
EXPOSE 8080

# Run the application with reduced capabilities
CMD ["/app/playground"]

