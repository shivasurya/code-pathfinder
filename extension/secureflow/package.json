{
  "name": "secureflow",
  "displayName": "SecureFlow",
  "description": "AI-powered security co-pilot that analyzes your code for vulnerabilities, performs threat modeling, and provides real-time security recommendations",
  "version": "0.0.1",
  "publisher": "codepathfinder",
  "author": {
    "name": "Shivasurya"
  },
  "license": "AGPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/shivasurya/code-pathfinder"
  },
  "keywords": [
    "security",
    "code-analysis",
    "ai",
    "threat-modeling",
    "vulnerability-detection",
    "static-analysis"
  ],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "Linters"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "secureflow-explorer",
          "title": "SecureFlow",
          "icon": "resources/dark/shield.svg"
        }
      ]
    },
    "views": {
      "secureflow-explorer": [
        {
          "type": "webview",
          "id": "secureflow.mainView",
          "name": "SecureFlow"
        }
      ]
    },
    "configuration": {
      "title": "SecureFlow",
      "properties": {
        "secureflow.AIModel": {
          "type": "string",
            "default": "openai",
            "enum": ["openai", "claude", "gemini", "claude-3-5-sonnet-20241022"],
          "enumDescriptions": [
            "Use OpenAI models for security analysis",
            "Use Anthropic Claude models for security analysis",
            "Use Google Gemini models for security analysis",
            "Use Anthropic Claude 3.5 Sonnet models for security analysis"
          ],
          "description": "Select the AI Model to use for security analysis"
        },
        "secureflow.APIKey": {
          "type": "string",
          "default": "",
          "description": "API Key for the selected AI Model (stored securely)"
        }
      }
    },
    "commands": [
      {
        "command": "secureflow.analyzeSelection",
        "title": "SecureFlow: Analyze Selected Code for Security Issues"
      },
      {
        "command": "secureflow.reviewChanges",
        "title": "SecureFlow: Review Git Changes for Security Issues",
        "icon": {
          "light": "resources/light/shield.svg",
          "dark": "resources/dark/shield.svg"
        }
      },
      {
        "command": "secureflow.profileWorkspace",
        "title": "SecureFlow: Profile Workspace for Security Analysis"
      }
    ],
    "keybindings": [
      {
        "command": "secureflow.analyzeSelection",
        "key": "cmd+l",
        "mac": "cmd+l",
        "when": "editorHasSelection"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "secureflow.reviewChanges",
          "group": "navigation@1",
          "when": "scmProvider == git"
        },
        {
          "command": "secureflow.reviewChanges",
          "group": "inline@1",
          "when": "scmProvider == git"
        }
      ],
      "scm/resourceGroup/context": [
        {
          "command": "secureflow.reviewChanges",
          "when": "scmProvider == git && scmResourceGroup == changes",
          "group": "1_modification"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "secureflow.reviewChanges",
          "when": "scmProvider == git && scmResourceGroup == changes",
          "group": "1_modification"
        }
      ],
      "editor/title": [
        {
          "command": "secureflow.reviewChanges",
          "group": "navigation@1",
          "when": "editorLangId && resourceScheme == file"
        }
      ],
      "view/title": [
        {
          "command": "secureflow.reviewChanges",
          "group": "navigation@1",
          "when": "view == scm"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "copy-webpack-plugin": "^13.0.0",
    "eslint": "^9.25.1",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.3",
    "webpack": "^5.99.7",
    "webpack-cli": "^6.0.1"
  }
}
